version: '3.8'

services:
  splitsafe:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "3000:3000"
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_DFX_HOST=https://ic0.app
      - NEXT_PUBLIC_CANISTER_ID_SPLIT_DAPP=${CANISTER_ID:-}
      - NEXT_PUBLIC_BLOCKSTREAM_URL=${BLOCKSTREAM_URL:-https://blockstream.info}
      - NEXT_PUBLIC_MEMPOOL_URL=${MEMPOOL_URL:-https://mempool.space}
      - NEXT_PUBLIC_ICP_DASHBOARD_URL=${ICP_DASHBOARD_URL:-https://dashboard.internetcomputer.org}
      - NEXT_PUBLIC_ICSCAN_URL=${ICSCAN_URL:-https://icscan.io}
    volumes:
      # Mount for development (optional)
      - ./frontend/src:/app/frontend/src:ro
      - ./backend/src:/app/backend/src:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service (optional)
  splitsafe-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_DFX_HOST=https://ic0.app
      - NEXT_PUBLIC_CANISTER_ID_SPLIT_DAPP=${CANISTER_ID:-}
      - NEXT_PUBLIC_BLOCKSTREAM_URL=${BLOCKSTREAM_URL:-https://blockstream.info}
      - NEXT_PUBLIC_MEMPOOL_URL=${MEMPOOL_URL:-https://mempool.space}
      - NEXT_PUBLIC_ICP_DASHBOARD_URL=${ICP_DASHBOARD_URL:-https://dashboard.internetcomputer.org}
      - NEXT_PUBLIC_ICSCAN_URL=${ICSCAN_URL:-https://icscan.io}
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - /app/frontend/node_modules
      - /app/backend/node_modules
    command: ["sh", "-c", "cd frontend && npm run dev"]
    profiles:
      - dev

networks:
  default:
    name: splitsafe-network 